basePath: /api/v1
definitions:
  api.AddMemberRequest:
    properties:
      role:
        enum:
        - 1
        - 2
        type: integer
      user_id:
        type: integer
    required:
    - role
    - user_id
    type: object
  api.CreateRoomRequest:
    properties:
      description:
        type: string
      is_private:
        type: boolean
      name:
        type: string
    required:
    - name
    type: object
  api.GetUserResponse:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      nickname:
        type: string
      status:
        type: integer
      username:
        type: string
    type: object
  api.ListMessagesResponse:
    properties:
      messages:
        items:
          $ref: '#/definitions/api.MessageResponse'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  api.ListRoomsResponse:
    properties:
      page:
        type: integer
      rooms:
        items:
          $ref: '#/definitions/api.RoomResponse'
        type: array
      size:
        type: integer
      total:
        type: integer
    type: object
  api.ListUsersResponse:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/api.GetUserResponse'
        type: array
    type: object
  api.LoginRequest:
    properties:
      password:
        example: password123
        type: string
      username:
        example: user123
        type: string
    required:
    - password
    - username
    type: object
  api.MarkAsReadRequest:
    properties:
      message_ids:
        items:
          type: integer
        type: array
    required:
    - message_ids
    type: object
  api.MessageResponse:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_read:
        type: boolean
      sender_id:
        type: integer
      sender_name:
        type: string
      target_id:
        type: integer
      target_type:
        $ref: '#/definitions/model.MessageTarget'
      type:
        $ref: '#/definitions/model.MessageType'
    type: object
  api.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
      nickname:
        example: 用户昵称
        maxLength: 50
        type: string
      password:
        example: password123
        maxLength: 20
        minLength: 6
        type: string
      username:
        example: user123
        maxLength: 20
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  api.RoomMemberResponse:
    properties:
      id:
        type: integer
      joined_at:
        type: string
      role:
        type: integer
      room_id:
        type: integer
      user_id:
        type: integer
    type: object
  api.RoomResponse:
    properties:
      created_at:
        type: string
      creator_id:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_private:
        type: boolean
      name:
        type: string
    type: object
  api.SendMessageRequest:
    properties:
      content:
        type: string
      target_id:
        type: integer
      target_type:
        allOf:
        - $ref: '#/definitions/model.MessageTarget'
        enum:
        - 1
        - 2
      type:
        allOf:
        - $ref: '#/definitions/model.MessageType'
        enum:
        - 1
        - 2
        - 3
    required:
    - content
    - target_id
    - target_type
    - type
    type: object
  api.TokenResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      user:
        $ref: '#/definitions/api.UserInfo'
    type: object
  api.UpdateUserStatusRequest:
    properties:
      instance_id:
        type: string
      status:
        enum:
        - 0
        - 1
        type: integer
    required:
    - status
    type: object
  api.UserInfo:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      nickname:
        type: string
      username:
        type: string
    type: object
  model.MessageTarget:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      MessageTargetAll: 发送给所有人
      MessageTargetRoom: 发送给房间
      MessageTargetUser: 发送给用户
    x-enum-descriptions:
    - 发送给用户
    - 发送给房间
    - 发送给所有人
    x-enum-varnames:
    - MessageTargetUser
    - MessageTargetRoom
    - MessageTargetAll
  model.MessageType:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      MessageTypeNotify: 通知消息
      MessageTypeSystem: 系统消息
      MessageTypeText: 文本消息
      MessageTypeWarning: 警告消息
    x-enum-descriptions:
    - 文本消息
    - 系统消息
    - 通知消息
    - 警告消息
    x-enum-varnames:
    - MessageTypeText
    - MessageTypeSystem
    - MessageTypeNotify
    - MessageTypeWarning
  utils.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 实时消息推送平台API文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: RTMP API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: 用户登录获取访问令牌
      parameters:
      - description: 登录信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.TokenResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 用户登录
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: 用户登出（客户端删除令牌）
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 用户登出
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: 刷新访问令牌
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.TokenResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 刷新令牌
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: 注册新用户账号
      parameters:
      - description: 注册信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.TokenResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      summary: 用户注册
      tags:
      - auth
  /api/v1/messages:
    post:
      consumes:
      - application/json
      description: 发送消息到用户或房间
      parameters:
      - description: 发送消息请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.SendMessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 发送消息
      tags:
      - messages
  /api/v1/messages/read:
    put:
      consumes:
      - application/json
      description: 标记指定消息为已读状态
      parameters:
      - description: 标记已读请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.MarkAsReadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 标记消息已读
      tags:
      - messages
  /api/v1/messages/room/{room_id}:
    get:
      consumes:
      - application/json
      description: 获取指定房间的消息列表
      parameters:
      - description: 房间ID
        in: path
        name: room_id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.ListMessagesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取房间消息
      tags:
      - messages
  /api/v1/messages/user/{user_id}:
    get:
      consumes:
      - application/json
      description: 获取指定用户的消息列表
      parameters:
      - description: 用户ID
        in: path
        name: user_id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.ListMessagesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取用户消息
      tags:
      - messages
  /api/v1/rooms:
    get:
      consumes:
      - application/json
      description: 获取房间列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.ListRoomsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取房间列表
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: 创建新的聊天房间
      parameters:
      - description: 创建房间请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.RoomResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 创建房间
      tags:
      - rooms
  /api/v1/rooms/{id}:
    get:
      consumes:
      - application/json
      description: 根据房间ID获取房间详细信息
      parameters:
      - description: 房间ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.RoomResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取房间信息
      tags:
      - rooms
  /api/v1/rooms/{id}/members:
    get:
      consumes:
      - application/json
      description: 获取指定房间的所有成员
      parameters:
      - description: 房间ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/api.RoomMemberResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取房间成员
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: 向房间添加新成员
      parameters:
      - description: 房间ID
        in: path
        name: id
        required: true
        type: integer
      - description: 添加成员请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.AddMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 添加房间成员
      tags:
      - rooms
  /api/v1/rooms/{id}/members/{user_id}:
    delete:
      consumes:
      - application/json
      description: 从房间移除指定成员
      parameters:
      - description: 房间ID
        in: path
        name: id
        required: true
        type: integer
      - description: 用户ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 移除房间成员
      tags:
      - rooms
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: 获取用户列表，支持分页
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.ListUsersResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取用户列表
      tags:
      - users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: 根据用户ID获取用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.GetUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取用户信息
      tags:
      - users
  /api/v1/users/{id}/status:
    put:
      consumes:
      - application/json
      description: 更新用户在线状态
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新用户状态请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 更新用户状态
      tags:
      - users
  /api/v1/users/me:
    get:
      consumes:
      - application/json
      description: 获取当前登录用户的信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.GetUserResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - BearerAuth: []
      summary: 获取当前用户信息
      tags:
      - users
  /health:
    get:
      consumes:
      - application/json
      description: 返回服务健康状态，供监控/负载均衡器使用
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 健康检查接口
      tags:
      - health
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
